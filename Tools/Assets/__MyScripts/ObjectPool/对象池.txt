对象池
目的:为了重复使用资源,优化性能,减少频繁创建和销毁资源的开销和产生的GC问题
使用:1.为了方便使用,
1.可以传递不同类型的资源到对象池中,可以在资源上挂载一个脚本,有脚本后就可以走对象池系统,包括UI界面和伤害字体,模型,预制体,特效,音效
2.使用时获取的时候根据,只要给路径字符串,如果对象池没有就创建,有的话就返回已经创建过的相同路径资源
3.释放时,直接放回对象池,不需要过多管理,最多指定一下最大缓存数量,超过一定数量对象池需要有资源释放机制(为了避免缓存太多导致占用内存过多的情况)
4.预制体的加载分为同步和异步,如果在游戏场景切换这种已经明确等待的情况下,可以使用同步加载,或者优化同步加载的数量,分帧生成,其他情况下使用异步,使用异步有一个缺点就是加载速度比同步慢,而且不能立刻就获得这个资源的对象,好处就是不会有卡顿情况.
5.对象池系统和AssetsBundle打包系统可以结合一起,分为编辑模式和AssetsBundle模式进行资源获取,
6.每个资源都有几种状态,未加载,加载中,加载完